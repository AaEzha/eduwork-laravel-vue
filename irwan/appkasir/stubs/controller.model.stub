<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use {{ rootNamespace }}Http\Controllers\Controller;
use {{ namespacedRequests }}
use Illuminate\Contracts\View\View;
use Illuminate\Http\RedirectResponse;

class {{ class }} extends Controller
{
   
    public function index(): View
    {
        ${{ modelVariable }}s = {{ model }}::all();

        return view('{{ modelVariable }}s.index', compact('{{ modelVariable }}s'));
    }

    public function create(): View
    {
        return view('{{ modelVariable }}s.create');
    }

    public function store({{ model }}{{ storeRequest }} $request): RedirectResponse
    {
        {{ model }}::create($request->validated());

        return redirect()->route('{{ modelVariable }}s.index')->with([
            'message' => 'successfully created !',
            'alert-type' => 'success'
        ]);
    }

    public function show({{ model }} ${{ modelVariable }}): View
    {
        return view('{{ modelVariable }}s.show', compact('{{ modelVariable }}'));
    }

    public function edit({{ model }} ${{ modelVariable }}): View
    {
        return view('{{ modelVariable }}s.edit', compact('{{ modelVariable }}'));
    }

    public function update({{ model }}{{ updateRequest }} $request, {{ model }} ${{ modelVariable }}): RedirectResponse
    {
        ${{ modelVariable }}->update($request->validated());

        return redirect()->route('{{ modelVariable }}s.index')->with([
            'message' => 'successfully updated !',
            'alert-type' => 'info'
        ]);
    }

    public function destroy({{ model }} ${{ modelVariable }}): RedirectResponse
    {
        ${{ modelVariable }}->delete();

        return back()->with([
            'message' => 'successfully deleted !',
            'alert-type' => 'danger'
        ]);
    }
}
